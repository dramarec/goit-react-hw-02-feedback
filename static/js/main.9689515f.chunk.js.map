{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/App.js","index.js","components/Section/Layot.module.css"],"names":["FeedbackOptions","options","onChange","map","option","type","name","onClick","toUpperCase","Notification","message","Section","children","title","className","style","container","Statistics","good","neutral","bad","total","positivePercentage","App","state","updateProp","e","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Object","keys","this","toFixed","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uQAWeA,EARS,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAChC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACrB,wBAAQC,KAAK,SAAsBC,KAAMF,EAAQG,QAASL,EAA1D,SACKE,EAAOI,eADeJ,OCEpBK,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,6BAAKA,K,gBCSDC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACzB,OACI,0BAASC,UAAWC,IAAMC,UAA1B,UACKH,GAAS,6BAAKA,IACdD,MCwBEK,EA7BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,8BACI,+BACI,uCAEI,qCAAQJ,QAEZ,0CAEI,qCAAQC,QAEZ,sCAEI,qCAAQC,QAEZ,wCAEI,qCAAQC,QAEZ,oDAEI,qCAAQC,EAAR,gBCnBCC,E,4MACjBC,MAAQ,CACJN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETK,WAAa,SAAAC,GAAM,IACPpB,EAASoB,EAAEC,OAAXrB,KACR,EAAKsB,UAAS,SAAAJ,GAAK,sBACdlB,EAAOkB,EAAMlB,GAAQ,O,EAG9BuB,mBAAqB,WACjB,OAAO,EAAKL,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAE7DU,gCAAkC,WAC9B,OAAO,EAAKD,qBACL,EAAKL,MAAMN,KAAO,EAAKW,qBAAwB,IAChD,G,uDAKN,OACI,qCACI,cAAC,EAAD,UACI,yDAGJ,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACI,cAAC,EAAD,CAGIZ,QAAS8B,OAAOC,KAAKC,KAAKT,OAC1BtB,SAAU+B,KAAKR,eAIvB,cAAC,EAAD,CAASZ,MAAM,YAAf,SACKoB,KAAKJ,qBACF,cAAC,EAAD,2BACQI,KAAKT,OADb,IAEIH,MAAOY,KAAKJ,qBACZP,mBAAoBW,KAAKH,kCAAkCI,aAG/D,cAAC,EAAD,CAAcxB,QAAQ,+B,GA9CbyB,aCDjCC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BC,EAAOC,QAAU,CAAC,UAAY,4B","file":"static/js/main.9689515f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onChange }) => {\n    return options.map(option => (\n        <button type=\"button\" key={option} name={option} onClick={onChange}>\n            {option.toUpperCase()}\n        </button>\n    ));\n};\n\nexport default FeedbackOptions;\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string.isRequired),\n    onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n    return <h3>{message}</h3>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n    message: PropTypes.string,\n};\n","import React from 'react';\nimport style from './Layot.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ children, title }) => {\n    return (\n        <section className={style.container}>\n            {title && <h2>{title}</h2>}\n            {children}\n        </section>\n    );\n};\n\nexport default Section;\n\nSection.propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n    return (\n        <div>\n            <ul>\n                <li>\n                    Good:\n                    <span> {good}</span>\n                </li>\n                <li>\n                    Neutral:\n                    <span> {neutral}</span>\n                </li>\n                <li>\n                    Bad:\n                    <span> {bad}</span>\n                </li>\n                <li>\n                    Total:\n                    <span> {total}</span>\n                </li>\n                <li>\n                    Positive feedback:\n                    <span> {positivePercentage}%</span>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Notification from './Notification/Notification';\nimport Section from './Section/Section';\nimport Statistics from './Statistics/Statistics';\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n    updateProp = e => {\n        const { name } = e.target;\n        this.setState(state => ({\n            [name]: state[name] + 1,\n        }));\n    };\n    countTotalFeedback = () => {\n        return this.state.good + this.state.neutral + this.state.bad;\n    };\n    countPositiveFeedbackPercentage = () => {\n        return this.countTotalFeedback()\n            ? (this.state.good / this.countTotalFeedback()) * 100\n            : 0;\n    };\n\n    render() {\n        // const { good, neutral, bad } = this.state;\n        return (\n            <>\n                <Section>\n                    <h1>Home Work #2 Feedback</h1>\n                </Section>\n\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions\n                        // options={this.state}\n                        // options={(good, neutral, bad)}\n                        options={Object.keys(this.state)}\n                        onChange={this.updateProp}\n                    />\n                </Section>\n\n                <Section title=\"Statistic\">\n                    {this.countTotalFeedback() ? (\n                        <Statistics\n                            {...this.state}\n                            total={this.countTotalFeedback()}\n                            positivePercentage={this.countPositiveFeedbackPercentage().toFixed()}\n                        />\n                    ) : (\n                        <Notification message=\"No feedback given\" />\n                    )}\n                </Section>\n            </>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layot_container__2qytK\"};"],"sourceRoot":""}